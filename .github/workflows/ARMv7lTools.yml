name: Build Static ARMv7l Tools (musl)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  TARGET_ARCH: armv7l
  MUSL_CROSS: arm-linux-musleabihf

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install musl-cross toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools file
          wget https://musl.cc/${MUSL_CROSS}-cross.tgz
          tar -xzf ${MUSL_CROSS}-cross.tgz -C /opt
          echo "/opt/${MUSL_CROSS}-cross/bin" >> $GITHUB_PATH

      - name: Build BusyBox (with safe CPU flags)
        run: |
          wget https://busybox.net/downloads/busybox-1.36.1.tar.bz2
          tar -xf busybox-1.36.1.tar.bz2
          cd busybox-1.36.1
          make defconfig
          # 关键修改：禁用可能不支持的ARM指令集扩展
          sed -i 's/^CONFIG_STATIC=.*/CONFIG_STATIC=y/' .config
          sed -i 's/^CONFIG_EXTRA_CFLAGS=.*/CONFIG_EXTRA_CFLAGS="-march=armv7-a -mtune=cortex-a8 -msoft-float"/' .config
          make -j$(nproc) CC="${MUSL_CROSS}-gcc" ARCH=arm CROSS_COMPILE=${MUSL_CROSS}-
          ${MUSL_CROSS}-strip busybox
          file busybox > ../busybox_check.log

      - name: Build Dropbear (safe mode)
        run: |
          wget https://matt.ucc.asn.au/dropbear/releases/dropbear-2022.83.tar.bz2
          tar -xf dropbear-2022.83.tar.bz2
          cd dropbear-2022.83
          ./configure \
            --host=${MUSL_CROSS} \
            --enable-static \
            --disable-zlib \
            CFLAGS="-march=armv7-a -mtune=cortex-a8 -msoft-float -static"
          make -j$(nproc) PROGRAMS="dropbear dbclient dropbearkey"
          ${MUSL_CROSS}-strip dropbear dbclient dropbearkey
          file dropbear > ../dropbear_check.log
          file dbclient >> ../dropbear_check.log
          file dropbearkey >> ../dropbear_check.log

      - name: Verify binaries
        run: |
          echo "=== Binary Compatibility Check ===" > xx_check.log
          cat busybox_check.log >> xx_check.log
          cat dropbear_check.log >> xx_check.log
          echo "================================" >> xx_check.log
          # 验证是否为静态ARMv7
          grep -q "statically linked" xx_check.log || (echo "Error: Not static binaries!" && exit 1)
          grep -q "ARM" xx_check.log || (echo "Error: Not ARM binaries!" && exit 1)

      - name: Package binaries
        run: |
          mkdir -p release/bin
          cp busybox-1.36.1/busybox release/bin/
          cp dropbear-2022.83/dropbear release/bin/
          cp dropbear-2022.83/dbclient release/bin/
          cp dropbear-2022.83/dropbearkey release/bin/
          tar -czvf ${TARGET_ARCH}-static-tools.tar.gz -C release .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${TARGET_ARCH}-build-artifacts
          path: |
            ${TARGET_ARCH}-static-tools.tar.gz
            xx_check.log

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${TARGET_ARCH}-static-tools.tar.gz
            xx_check.log
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
